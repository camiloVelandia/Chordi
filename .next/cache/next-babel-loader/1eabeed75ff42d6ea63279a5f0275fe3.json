{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/c/Users/cmax9/documents/Developer/chordi/pages/letra/[artist]/[name].js\";\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from \"next/router\";\nimport { Title, Small, Letter, Smaller } from './styles';\nimport Spinner from '@components/Spinner';\n\nconst Lyric = () => {\n  const router = useRouter();\n  const {\n    0: letra,\n    1: setLetra\n  } = useState('');\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const API = `https://api.lyrics.ovh/v1/${router.query.artist}/${router.query.name}`;\n  useEffect(() => {\n    setLoading(true);\n    window.fetch(`${API}`).then(response => response.json()).then(data => {\n      setLetra(data);\n      setLoading(false); // data.length ? setArtist(data[0].artist.name) : ''\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: router.query.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Small, {\n      children: router.query.artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Letter, {\n      children: letra.lyrics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Smaller, {\n      children: \"Letra powered by Lyrics.ovh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Lyric;","map":{"version":3,"sources":["/mnt/c/Users/cmax9/documents/Developer/chordi/pages/letra/[artist]/[name].js"],"names":["React","useState","useEffect","useRouter","Title","Small","Letter","Smaller","Spinner","Lyric","router","letra","setLetra","loading","setLoading","API","query","artist","name","window","fetch","then","response","json","data","lyrics"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAQC,KAAR,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,OAA9B,QAA4C,UAA5C;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACY,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMc,GAAG,GAAI,6BAA4BL,MAAM,CAACM,KAAP,CAAaC,MAAO,IAAGP,MAAM,CAACM,KAAP,CAAaE,IAAK,EAAlF;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,IAAAA,MAAM,CACHC,KADH,CACU,GAAEL,GAAI,EADhB,EAEGM,IAFH,CAESC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAFtB,EAGGF,IAHH,CAGSG,IAAD,IAAU;AACdZ,MAAAA,QAAQ,CAACY,IAAD,CAAR;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV,CAFc,CAGd;AACD,KAPH;AAQD,GAVQ,EAUN,EAVM,CAAT;AAYA,MAAID,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,sBACE;AAAA,4BACE,QAAC,KAAD;AAAA,gBAAQH,MAAM,CAACM,KAAP,CAAaE;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA,gBAAQR,MAAM,CAACM,KAAP,CAAaC;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,MAAD;AAAA,gBAASN,KAAK,CAACc;AAAf;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA7BD;;AA+BA,eAAehB,KAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport { useRouter } from \"next/router\";\nimport {Title, Small, Letter, Smaller} from './styles'\nimport Spinner from '@components/Spinner';\n\nconst Lyric = () => {\n  const router = useRouter();\n\n  const [letra, setLetra] = useState('')\n  const [loading, setLoading] = useState(false)\n  const API = `https://api.lyrics.ovh/v1/${router.query.artist}/${router.query.name}`;\n  \n  useEffect(() => {\n    setLoading(true)\n    window\n      .fetch(`${API}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setLetra(data);\n        setLoading(false)\n        // data.length ? setArtist(data[0].artist.name) : ''\n      });\n  }, []);\n\n  if (loading) return <Spinner />;\n\n  return (\n    <section>\n      <Title>{router.query.name}</Title>\n      <Small>{router.query.artist}</Small>\n      <Letter>{letra.lyrics}</Letter>\n      <Smaller>Letra powered by Lyrics.ovh</Smaller>\n    </section>\n  );\n};\n\nexport default Lyric;"]},"metadata":{},"sourceType":"module"}