{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/mnt/c/Users/cmax9/documents/Developer/chordi/pages/letra/[artist]/[name].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from \"next/router\";\nimport { Title, Small, Letter, Smaller, Error } from './styles';\nimport Spinner from '@components/Spinner';\n\nvar Lyric = function Lyric() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState(''),\n      letra = _useState[0],\n      setLetra = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var API = \"https://api.lyrics.ovh/v1/\".concat(router.query.artist, \"/\").concat(router.query.name);\n  useEffect(function () {\n    setLoading(true);\n    window.fetch(\"\".concat(API)).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setLetra(data);\n      setLoading(false); // data.length ? setArtist(data[0].artist.name) : ''\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, _this);\n  if (letra.lyrics == '') return /*#__PURE__*/_jsxDEV(Error, {\n    children: \"no se ha encontrado letra :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 32\n  }, _this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: router.query.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Small, {\n      children: router.query.artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Letter, {\n      children: letra.lyrics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Smaller, {\n      children: \"Letra powered by Lyrics.ovh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Lyric, \"8zcWNT9ktIYlkYrJso+uVnCvX6E=\", false, function () {\n  return [useRouter];\n});\n\n_c = Lyric;\nexport default Lyric;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lyric\");","map":{"version":3,"sources":["/mnt/c/Users/cmax9/documents/Developer/chordi/pages/letra/[artist]/[name].js"],"names":["React","useState","useEffect","useRouter","Title","Small","Letter","Smaller","Error","Spinner","Lyric","router","letra","setLetra","loading","setLoading","API","query","artist","name","window","fetch","then","response","json","data","lyrics"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAAQC,KAAR,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,OAA9B,EAAuCC,KAAvC,QAAmD,UAAnD;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAClB,MAAMC,MAAM,GAAGR,SAAS,EAAxB;;AADkB,kBAGQF,QAAQ,CAAC,EAAD,CAHhB;AAAA,MAGXW,KAHW;AAAA,MAGJC,QAHI;;AAAA,mBAIYZ,QAAQ,CAAC,KAAD,CAJpB;AAAA,MAIXa,OAJW;AAAA,MAIFC,UAJE;;AAKlB,MAAMC,GAAG,uCAAgCL,MAAM,CAACM,KAAP,CAAaC,MAA7C,cAAuDP,MAAM,CAACM,KAAP,CAAaE,IAApE,CAAT;AAEAjB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,IAAAA,MAAM,CACHC,KADH,WACYL,GADZ,GAEGM,IAFH,CAEQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAFR,EAGGF,IAHH,CAGQ,UAACG,IAAD,EAAU;AACdZ,MAAAA,QAAQ,CAACY,IAAD,CAAR;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV,CAFc,CAGd;AACD,KAPH;AAQD,GAVQ,EAUN,EAVM,CAAT;AAYA,MAAID,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,WAAP;AACb,MAAIF,KAAK,CAACc,MAAN,IAAc,EAAlB,EAAsB,oBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAGtB,sBACE;AAAA,4BACE,QAAC,KAAD;AAAA,gBAAQf,MAAM,CAACM,KAAP,CAAaE;AAArB;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,KAAD;AAAA,gBAAQR,MAAM,CAACM,KAAP,CAAaC;AAArB;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,MAAD;AAAA,gBAASN,KAAK,CAACc;AAAf;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CA/BD;;GAAMhB,K;UACWP,S;;;KADXO,K;AAiCN,eAAeA,KAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport { useRouter } from \"next/router\";\nimport {Title, Small, Letter, Smaller, Error} from './styles'\nimport Spinner from '@components/Spinner';\n\nconst Lyric = () => {\n  const router = useRouter();\n\n  const [letra, setLetra] = useState('')\n  const [loading, setLoading] = useState(false)\n  const API = `https://api.lyrics.ovh/v1/${router.query.artist}/${router.query.name}`;\n  \n  useEffect(() => {\n    setLoading(true)\n    window\n      .fetch(`${API}`)\n      .then((response) => response.json())\n      .then((data) => {\n        setLetra(data);\n        setLoading(false)\n        // data.length ? setArtist(data[0].artist.name) : ''\n      });\n  }, []);\n\n  if (loading) return <Spinner />;\n  if (letra.lyrics=='') return <Error>no se ha encontrado letra :(</Error>;\n\n\n  return (\n    <section>\n      <Title>{router.query.name}</Title>\n      <Small>{router.query.artist}</Small>\n      <Letter>{letra.lyrics}</Letter>\n      <Smaller>Letra powered by Lyrics.ovh</Smaller>\n    </section>\n  );\n};\n\nexport default Lyric;"]},"metadata":{},"sourceType":"module"}